/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v2.2/films/{id}": {
    /** Данный эндпоинт возвращает базовые данные о фильме. Поле <b>lastSync</b> показывает дату последнего обновления данных. */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["Film"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Фильм не найден */
        404: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/seasons": {
    /** Данный эндпоинт возвращает данные о сезонах для сериала. */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["SeasonResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/facts": {
    /** Данный эндпоинт возвращает список фактов и ошибок в фильме. <br> type - <b>FACT</b>, обозначает интересный факт о фильме. <br> type - <b>BLOOPER</b>, обозначает ошибку в фильме. */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["FactResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/distributions": {
    /** Данный эндпоинт возвращает данные о прокате в разных странах. */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["DistributionResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/box_office": {
    /** Данный эндпоинт возвращает данные о бюджете и сборах. */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["BoxOfficeResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/awards": {
    /** Данный эндпоинт возвращает данные о наградах и премиях фильма. */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["AwardResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/videos": {
    /** Данный эндпоинт возвращает трейлеры,тизеры,видео для фильма по kinopoisk film id. В данный момент доступно два site:  <br/> <ul><li>YOUTUBE - в этом случае <b>url</b> это просто ссылка на youtube видео.</li><li>KINOPOISK_WIDGET - в этом случае <b>url</b> это ссылка на кинопоиск виджет. Например https://widgets.kinopoisk.ru/discovery/trailer/123573?onlyPlayer=1&autoplay=1&cover=1. Если вы хотите вставить этот виджет на вашу страницу, вы можете сделать следующее:  <br/><br/>&lt;script src=&quot;https://unpkg.com/@ungap/custom-elements-builtin&quot;&gt;&lt;/script&gt;<br/>&lt;script type=&quot;module&quot; src=&quot;https://unpkg.com/x-frame-bypass&quot;&gt;&lt;/script&gt;<br/>&lt;iframe is=&quot;x-frame-bypass&quot; src=&quot;https://widgets.kinopoisk.ru/discovery/trailer/167560?onlyPlayer=1&amp;autoplay=1&amp;cover=1&quot; width=&quot;500&quot; height=&quot;500&quot;&gt;&lt;/iframe&gt;</li></ul> */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["VideoResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/similars": {
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["RelatedFilmResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/images": {
    /** Данный эндпоинт возвращает изображения связанные с фильмом с пагинацией. Каждая страница содержит <b>не более чем 20 фильмов</b>.</br> Доступные изображения:</br> <ul> <li>STILL - кадры</li> <li>SHOOTING - изображения со съемок</li> <li>POSTER - постеры</li> <li>FAN_ART - фан-арты</li> <li>PROMO - промо</li> <li>CONCEPT - концепт-арты</li> <li>WALLPAPER - обои</li> <li>COVER - обложки</li> <li>SCREENSHOT - скриншоты</li> </ul> */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
        query: {
          /** тип изображения */
          type?:
            | "STILL"
            | "SHOOTING"
            | "POSTER"
            | "FAN_ART"
            | "PROMO"
            | "CONCEPT"
            | "WALLPAPER"
            | "COVER"
            | "SCREENSHOT";
          /** номер страницы */
          page?: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["ImageResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/{id}/reviews": {
    /** Возвращает список рецензии зрителей с пагинацией. Каждая страница содержит не более чем 20 рецензий. */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
        query: {
          /** номер страницы */
          page?: number;
          /** тип сортировки */
          order?:
            | "DATE_ASC"
            | "DATE_DESC"
            | "USER_POSITIVE_RATING_ASC"
            | "USER_POSITIVE_RATING_DESC"
            | "USER_NEGATIVE_RATING_ASC"
            | "USER_NEGATIVE_RATING_DESC";
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["ReviewResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/top": {
    /** Возвращает список фильмов с пагинацией. Каждая страница содержит не более чем 20 фильмов. */
    get: {
      parameters: {
        query: {
          /** тип топа или коллекции */
          type?:
            | "TOP_250_BEST_FILMS"
            | "TOP_100_POPULAR_FILMS"
            | "TOP_AWAIT_FILMS";
          /** номер страницы */
          page?: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["FilmTopResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Лимит 5 запроса в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/premieres": {
    /** Данный эндпоинт возвращает список кинопремьер. Например https://www.kinopoisk.ru/premiere/ */
    get: {
      parameters: {
        query: {
          /** год релиза */
          year: number;
          /** месяц релиза */
          month:
            | "JANUARY"
            | "FEBRUARY"
            | "MARCH"
            | "APRIL"
            | "MAY"
            | "JUNE"
            | "JULY"
            | "AUGUST"
            | "SEPTEMBER"
            | "OCTOBER"
            | "NOVEMBER"
            | "DECEMBER";
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["PremiereResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Лимит 5 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films/filters": {
    /** Возвращает список id стран и жанров, которые могут быть использованы в /api/v2.2/films */
    get: {
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["FiltersResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.2/films": {
    /** Возвращает список фильмов с пагинацией. Каждая страница содержит не более чем 20 фильмов. Данный эндпоинт не возращает более 400 фильмов. <i>Используй /api/v2.2/films/filters чтобы получить id стран и жанров.</i> */
    get: {
      parameters: {
        query: {
          /** список id стран разделенные запятой. Например <i>countries=1,2,3</i>. На данный момент можно указать не более одной страны. */
          countries?: number[];
          /** список id жанров разделенные запятой. Например <i>genres=1,2,3</i>. На данный момент можно указать не более одного жанра. */
          genres?: number[];
          /** сортировка */
          order?: "RATING" | "NUM_VOTE" | "YEAR";
          /** тип фильма */
          type?: "FILM" | "TV_SHOW" | "TV_SERIES" | "MINI_SERIES" | "ALL";
          /** минимальный рейтинг */
          ratingFrom?: number;
          /** максимальный рейтинг */
          ratingTo?: number;
          /** минимальный год */
          yearFrom?: number;
          /** максимальный год */
          yearTo?: number;
          /** imdb id */
          imdbId?: string;
          /** ключевое слово, которое встречается в названии фильма */
          keyword?: string;
          /** номер страницы */
          page?: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["FilmSearchByFiltersResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Лимит 5 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/{id}/sequels_and_prequels": {
    /** tbd */
    get: {
      parameters: {
        path: {
          /** kinopoisk film id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["FilmSequelsAndPrequelsResponse"][];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Фильм не найден */
        404: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/search-by-keyword": {
    /** Возвращает список фильмов с пагинацией. Каждая страница содержит не более чем 20 фильмов. */
    get: {
      parameters: {
        query: {
          /** ключивые слова для поиска */
          keyword: string;
          /** номер страницы */
          page?: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["FilmSearchResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Фильмы не найдены */
        404: unknown;
        /** Слишком много запросов. Лимит 5 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v2.1/films/releases": {
    /** Данный эндпоинт возвращает список цифровых релизов. Например https://www.kinopoisk.ru/comingsoon/digital/ */
    get: {
      parameters: {
        query: {
          /** год релиза */
          year: number;
          /** месяц релиза */
          month:
            | "JANUARY"
            | "FEBRUARY"
            | "MARCH"
            | "APRIL"
            | "MAY"
            | "JUNE"
            | "JULY"
            | "AUGUST"
            | "SEPTEMBER"
            | "OCTOBER"
            | "NOVEMBER"
            | "DECEMBER";
          /** номер страницы */
          page?: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["DigitalReleaseResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Фильмы не найдены */
        404: unknown;
        /** Слишком много запросов. Лимит 5 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v1/staff": {
    get: {
      parameters: {
        query: {
          /** kinopoisk film id */
          filmId: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["StaffResponse"][];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Данные не найдены */
        404: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v1/staff/{id}": {
    get: {
      parameters: {
        path: {
          /** kinopoisk person id */
          id: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["PersonResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Данные не найдены */
        404: unknown;
        /** Слишком много запросов. Общий лимит - 20 запросов в секунду */
        429: unknown;
      };
    };
  };
  "/api/v1/persons": {
    /** Одна страница может содержать до 50 элементов в items. */
    get: {
      parameters: {
        query: {
          /** имя человека */
          name: string;
          /** номер страницы */
          page?: number;
        };
      };
      responses: {
        /** Запрос выполнен успешно */
        200: {
          content: {
            "application/json": components["schemas"]["PersonByNameResponse"];
          };
        };
        /** Пустой или неправильный токен */
        401: unknown;
        /** Превышен лимит запросов(или дневной, или общий) */
        402: unknown;
        /** Слишком много запросов. Общий лимит - 5 запросов в секунду */
        429: unknown;
      };
    };
  };
}

export interface components {
  schemas: {
    Film: {
      kinopoiskId: number;
      imdbId: string | null;
      nameRu: string | null;
      nameEn: string | null;
      nameOriginal: string | null;
      posterUrl: string;
      posterUrlPreview: string;
      coverUrl: string | null;
      logoUrl: string | null;
      reviewsCount: number;
      ratingGoodReview: number | null;
      ratingGoodReviewVoteCount: number | null;
      ratingKinopoisk: number | null;
      ratingKinopoiskVoteCount: number | null;
      ratingImdb: number | null;
      ratingImdbVoteCount: number | null;
      ratingFilmCritics: number | null;
      ratingFilmCriticsVoteCount: number | null;
      ratingAwait: number | null;
      ratingAwaitCount: number | null;
      ratingRfCritics: number | null;
      ratingRfCriticsVoteCount: number | null;
      webUrl: string;
      year: number | null;
      filmLength: number | null;
      slogan: string | null;
      description: string | null;
      shortDescription: string | null;
      editorAnnotation: string | null;
      isTicketsAvailable: boolean;
      productionStatus:
        | (
            | "FILMING"
            | "PRE_PRODUCTION"
            | "COMPLETED"
            | "ANNOUNCED"
            | "UNKNOWN"
            | "POST_PRODUCTION"
          )
        | null;
      type: "FILM" | "VIDEO" | "TV_SERIES" | "MINI_SERIES" | "TV_SHOW";
      ratingMpaa: string | null;
      ratingAgeLimits: string | null;
      hasImax: boolean | null;
      has3D: boolean | null;
      lastSync: string;
      countries: components["schemas"]["Country"][];
      genres: components["schemas"]["Genre"][];
      startYear: number | null;
      endYear: number | null;
      serial?: boolean | null;
      shortFilm?: boolean | null;
      completed?: boolean | null;
    };
    SeasonResponse: {
      total: number;
      items: components["schemas"]["Season"][];
    };
    FactResponse: {
      total: number;
      items: components["schemas"]["Fact"][];
    };
    DistributionResponse: {
      total: number;
      items: components["schemas"]["Distribution"][];
    };
    BoxOfficeResponse: {
      total: number;
      items: components["schemas"]["BoxOffice"][];
    };
    Fact: {
      text: string;
      type: "FACT" | "BLOOPER";
      spoiler: boolean;
    };
    BoxOffice: {
      type: string;
      amount: number;
      currencyCode: string;
      name: string;
      symbol: string;
    };
    AwardResponse: {
      total: number;
      items: components["schemas"]["Award"][];
    };
    Award: {
      name: string;
      win: boolean;
      imageUrl: string | null;
      nominationName: string;
      year: number;
      persons?: components["schemas"]["AwardPerson"][];
    };
    AwardPerson: {
      kinopoiskId: number;
      webUrl: string;
      nameRu: string | null;
      nameEn: string | null;
      sex: string;
      posterUrl: string;
      growth: number | null;
      birthday: string | null;
      death: string | null;
      age: number | null;
      birthplace: string | null;
      deathplace: string | null;
      profession: string | null;
    };
    Distribution: {
      type: "LOCAL" | "COUNTRY_SPECIFIC" | "PREMIERE" | "ALL" | "WORLD_PREMIER";
      subType: ("CINEMA" | "DVD" | "DIGITAL" | "BLURAY") | null;
      date: string | null;
      reRelease: boolean | null;
      country: components["schemas"]["Country"] &
        ({ [key: string]: any } | null);
      companies: components["schemas"]["Company"][];
    };
    Company: {
      name: string;
    };
    Season: {
      number: number;
      episodes: components["schemas"]["Episode"][];
    };
    Episode: {
      seasonNumber: number;
      episodeNumber: number;
      nameRu: string | null;
      nameEn: string | null;
      synopsis: string | null;
      releaseDate: string | null;
    };
    Country: {
      country: string;
    };
    Genre: {
      genre: string;
    };
    FiltersResponse: {
      genres: components["schemas"]["FiltersResponse_genres"][];
      countries: components["schemas"]["FiltersResponse_countries"][];
    };
    FilmSearchResponse: {
      keyword: string;
      pagesCount: number;
      searchFilmsCountResult: number;
      films: components["schemas"]["FilmSearchResponse_films"][];
    };
    FilmSearchByFiltersResponse: {
      total: number;
      totalPages: number;
      items: components["schemas"]["FilmSearchByFiltersResponse_items"][];
    };
    FilmSequelsAndPrequelsResponse: {
      filmId: number;
      nameRu: string;
      nameEn: string;
      nameOriginal: string;
      posterUrl: string;
      posterUrlPreview: string;
      relationType: "SEQUEL" | "PREQUEL" | "REMAKE" | "UNKNOWN";
    };
    RelatedFilmResponse: {
      total: number;
      items: components["schemas"]["RelatedFilmResponse_items"][];
    };
    ReviewResponse: {
      /** Суммарное кол-во пользовательских рецензий */
      total: number;
      totalPages: number;
      totalPositiveReviews: number;
      totalNegativeReviews: number;
      totalNeutralReviews: number;
      items: components["schemas"]["ReviewResponse_items"][];
    };
    FilmTopResponse: {
      pagesCount: number;
      films: components["schemas"]["FilmTopResponse_films"][];
    };
    StaffResponse: {
      staffId: number;
      nameRu: string | null;
      nameEn: string | null;
      description: string | null;
      posterUrl: string;
      professionText: string;
      professionKey:
        | "WRITER"
        | "OPERATOR"
        | "EDITOR"
        | "COMPOSER"
        | "PRODUCER_USSR"
        | "TRANSLATOR"
        | "DIRECTOR"
        | "DESIGN"
        | "PRODUCER"
        | "ACTOR"
        | "VOICE_DIRECTOR"
        | "UNKNOWN";
    };
    PersonResponse: {
      personId: number;
      webUrl: string | null;
      nameRu: string | null;
      nameEn: string | null;
      sex: ("MALE" | "FEMALE") | null;
      posterUrl: string;
      growth: string | null;
      birthday: string | null;
      death: string | null;
      age: number | null;
      birthplace: string | null;
      deathplace: string | null;
      hasAwards: number | null;
      profession: string | null;
      facts: string[];
      spouses: components["schemas"]["PersonResponse_spouses"][];
      films: components["schemas"]["PersonResponse_films"][];
    };
    PersonByNameResponse: {
      total: number;
      items: components["schemas"]["PersonByNameResponse_items"][];
    };
    ImageResponse: {
      /** Общее кол-во изображений */
      total: number;
      /** Код-во доступных страниц */
      totalPages: number;
      items: components["schemas"]["ImageResponse_items"][];
    };
    PremiereResponse: {
      total: number;
      items: components["schemas"]["PremiereResponseItem"][];
    };
    PremiereResponseItem: {
      kinopoiskId: number;
      nameRu: string | null;
      nameEn: string | null;
      year: number;
      posterUrl: string;
      posterUrlPreview: string;
      countries: components["schemas"]["Country"][];
      genres: components["schemas"]["Genre"][];
      duration: number | null;
      premiereRu: string;
    };
    DigitalReleaseResponse: {
      page: number;
      total: number;
      releases: components["schemas"]["DigitalReleaseItem"][];
    };
    DigitalReleaseItem: {
      filmId: number;
      nameRu: string;
      nameEn: string;
      year: number;
      posterUrl: string;
      posterUrlPreview: string;
      countries: components["schemas"]["Country"][];
      genres: components["schemas"]["Genre"][];
      rating: number;
      ratingVoteCount: number;
      expectationsRating: number;
      expectationsRatingVoteCount: number;
      duration: number;
      releaseDate: string;
    };
    VideoResponse: {
      total: number;
      items: components["schemas"]["VideoResponse_items"][];
    };
    ApiError: {
      message: string;
    };
    FiltersResponse_genres: {
      id?: number;
      genre?: string;
    };
    FiltersResponse_countries: {
      id?: number;
      country?: string;
    };
    FilmSearchResponse_films: {
      filmId?: number;
      nameRu?: string;
      nameEn?: string;
      type?: "FILM" | "TV_SHOW" | "UNKNOWN";
      year?: string;
      description?: string;
      filmLength?: string;
      countries?: components["schemas"]["Country"][];
      genres?: components["schemas"]["Genre"][];
      rating?: string;
      ratingVoteCount?: number;
      posterUrl?: string;
      posterUrlPreview?: string;
    };
    FilmSearchByFiltersResponse_items: {
      kinopoiskId?: number;
      imdbId?: string | null;
      nameRu?: string | null;
      nameEn?: string | null;
      nameOriginal?: string | null;
      countries?: components["schemas"]["Country"][];
      genres?: components["schemas"]["Genre"][];
      ratingKinopoisk?: number | null;
      ratingImdb?: number | null;
      year?: number | null;
      type?:
        | "FILM"
        | "TV_SHOW"
        | "VIDEO"
        | "MINI_SERIES"
        | "TV_SERIES"
        | "UNKNOWN";
      posterUrl?: string;
      posterUrlPreview?: string;
    };
    RelatedFilmResponse_items: {
      filmId?: number;
      nameRu?: string | null;
      nameEn?: string | null;
      nameOriginal?: string | null;
      posterUrl?: string;
      posterUrlPreview?: string;
      relationType?: "SIMILAR";
    };
    ReviewResponse_items: {
      kinopoiskId?: number;
      type?: "POSITIVE" | "NEGATIVE" | "NEUTRAL" | "UNKNOWN";
      date?: string;
      positiveRating?: number;
      negativeRating?: number;
      author?: string;
      title?: string | null;
      description?: string;
    };
    FilmTopResponse_films: {
      filmId?: number;
      nameRu?: string | null;
      nameEn?: string | null;
      year?: string | null;
      filmLength?: string | null;
      countries?: components["schemas"]["Country"][];
      genres?: components["schemas"]["Genre"][];
      rating?: number | null;
      ratingVoteCount?: number | null;
      posterUrl?: string;
      posterUrlPreview?: string;
    };
    PersonResponse_spouses: {
      personId?: number;
      name?: string | null;
      divorced?: boolean;
      divorcedReason?: string | null;
      sex?: "MALE" | "FEMALE";
      children?: number;
      webUrl?: string;
      relation?: string;
    };
    PersonResponse_films: {
      filmId?: number;
      nameRu?: string | null;
      nameEn?: string | null;
      rating?: string | null;
      general?: boolean;
      description?: string | null;
      professionKey?:
        | "WRITER"
        | "OPERATOR"
        | "EDITOR"
        | "COMPOSER"
        | "PRODUCER_USSR"
        | "HIMSELF"
        | "HERSELF"
        | "HRONO_TITR_MALE"
        | "HRONO_TITR_FEMALE"
        | "TRANSLATOR"
        | "DIRECTOR"
        | "DESIGN"
        | "PRODUCER"
        | "ACTOR"
        | "VOICE_DIRECTOR"
        | "UNKNOWN";
    };
    PersonByNameResponse_items: {
      kinopoiskId?: number;
      webUrl?: string;
      nameRu?: string | null;
      nameEn?: string | null;
      sex?: ("MALE" | "FEMALE" | "UNKNOWN") | null;
      posterUrl?: string;
    };
    ImageResponse_items: {
      imageUrl?: string;
      previewUrl?: string;
    };
    VideoResponse_items: {
      url?: string;
      name?: string;
      site?: "YOUTUBE" | "KINOPOISK_WIDGET" | "UNKNOWN";
    };
  };
}

export interface operations {}
